<?php

/**
 * BaseAdvert
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $type_id
 * @property integer $type_route_id
 * @property integer $direction_id
 * @property string $start_location
 * @property string $end_location
 * @property string $middle_location
 * @property timestamp $time
 * @property integer $p_number
 * @property string $comment
 * @property TypeAdvert $TypeAdvert
 * @property TypeRoute $TypeRoute
 * @property Direction $Direction
 * @property Doctrine_Collection $advert
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getTypeId()          Returns the current record's "type_id" value
 * @method integer             getTypeRouteId()     Returns the current record's "type_route_id" value
 * @method integer             getDirectionId()     Returns the current record's "direction_id" value
 * @method string              getStartLocation()   Returns the current record's "start_location" value
 * @method string              getEndLocation()     Returns the current record's "end_location" value
 * @method string              getMiddleLocation()  Returns the current record's "middle_location" value
 * @method timestamp           getTime()            Returns the current record's "time" value
 * @method integer             getPNumber()         Returns the current record's "p_number" value
 * @method string              getComment()         Returns the current record's "comment" value
 * @method TypeAdvert          getTypeAdvert()      Returns the current record's "TypeAdvert" value
 * @method TypeRoute           getTypeRoute()       Returns the current record's "TypeRoute" value
 * @method Direction           getDirection()       Returns the current record's "Direction" value
 * @method Doctrine_Collection getAdvert()          Returns the current record's "advert" collection
 * @method Advert              setId()              Sets the current record's "id" value
 * @method Advert              setTypeId()          Sets the current record's "type_id" value
 * @method Advert              setTypeRouteId()     Sets the current record's "type_route_id" value
 * @method Advert              setDirectionId()     Sets the current record's "direction_id" value
 * @method Advert              setStartLocation()   Sets the current record's "start_location" value
 * @method Advert              setEndLocation()     Sets the current record's "end_location" value
 * @method Advert              setMiddleLocation()  Sets the current record's "middle_location" value
 * @method Advert              setTime()            Sets the current record's "time" value
 * @method Advert              setPNumber()         Sets the current record's "p_number" value
 * @method Advert              setComment()         Sets the current record's "comment" value
 * @method Advert              setTypeAdvert()      Sets the current record's "TypeAdvert" value
 * @method Advert              setTypeRoute()       Sets the current record's "TypeRoute" value
 * @method Advert              setDirection()       Sets the current record's "Direction" value
 * @method Advert              setAdvert()          Sets the current record's "advert" collection
 * 
 * @package    voyage
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAdvert extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('advert');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'unique' => true,
             'autoincrement' => true,
             'primary' => true,
             'length' => 11,
             ));
        $this->hasColumn('type_id', 'integer', 1, array(
             'type' => 'integer',
             'unique' => false,
             'autoincrement' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('type_route_id', 'integer', 1, array(
             'type' => 'integer',
             'unique' => false,
             'autoincrement' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('direction_id', 'integer', 1, array(
             'type' => 'integer',
             'unique' => false,
             'autoincrement' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('start_location', 'string', 255, array(
             'type' => 'string',
             'unique' => false,
             'autoincrement' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('end_location', 'string', 255, array(
             'type' => 'string',
             'unique' => false,
             'autoincrement' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('middle_location', 'string', 255, array(
             'type' => 'string',
             'unique' => false,
             'autoincrement' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('time', 'timestamp', null, array(
             'type' => 'timestamp',
             'unique' => false,
             'autoincrement' => false,
             'primary' => false,
             'notnull' => true,
             ));
        $this->hasColumn('p_number', 'integer', 3, array(
             'type' => 'integer',
             'unique' => false,
             'autoincrement' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 3,
             ));
        $this->hasColumn('comment', 'string', 512, array(
             'type' => 'string',
             'unique' => false,
             'autoincrement' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 512,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TypeAdvert', array(
             'local' => 'id',
             'foreign' => 'type_id'));

        $this->hasOne('TypeRoute', array(
             'local' => 'id',
             'foreign' => 'type_route_id'));

        $this->hasOne('Direction', array(
             'local' => 'id',
             'foreign' => 'direction_id'));

        $this->hasMany('AcceptedPersons as advert', array(
             'local' => 'advert_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}